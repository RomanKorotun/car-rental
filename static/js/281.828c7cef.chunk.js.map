{"version":3,"file":"static/js/281.828c7cef.chunk.js","mappings":"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","sources":["image/sprite.svg","components/CardList/CardList.styled.js","components/CardList/CardList.js","components/Message.js","redux/cars/carsSelectors.js","hooks/useCars.js","components/Favorite/Favorite.styled.js","components/Favorite/Favorite.js","pages/FavoritesPage.js"],"sourcesContent":["var _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgSprite(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-heart\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M27.787 6.147c-0.681-0.681-1.49-1.222-2.38-1.591s-1.844-0.559-2.807-0.559c-0.963 0-1.917 0.19-2.807 0.559s-1.698 0.909-2.379 1.591l-1.413 1.413-1.413-1.413c-1.376-1.376-3.241-2.148-5.187-2.148s-3.811 0.773-5.187 2.148c-1.376 1.376-2.148 3.241-2.148 5.187s0.773 3.811 2.148 5.187l11.787 11.787 11.787-11.787c0.681-0.681 1.222-1.49 1.591-2.38s0.558-1.844 0.558-2.807-0.19-1.917-0.558-2.807c-0.369-0.89-0.909-1.699-1.591-2.38z\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.6306d329692724adef802e6a8eadd800.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  row-gap: 50px;\r\n  column-gap: 29px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  @media only screen and (min-width: 1158px) {\r\n    flex-basis: calc((100% - 3 * 29px) / 4);\r\n  }\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  border-radius: 14px;\r\n`;\r\n\r\nexport const Svg = styled.svg`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  stroke: rgba(255, 255, 255, 0.8);\r\n  fill: ${({ $fill }) => {\r\n    if ($fill) {\r\n      return $fill;\r\n    }\r\n    return 'none';\r\n  }};\r\n  width: 18px;\r\n  height: 18px;\r\n  top: 14px;\r\n  right: 14px;\r\n`;\r\n\r\nexport const CardWrapper = styled.div`\r\n  padding-top: 14px;\r\n  padding-bottom: 28px;\r\n`;\r\n\r\nexport const SubTitle = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nexport const CarBrand = styled.span`\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  color: #121417;\r\n`;\r\n\r\nexport const Model = styled.span`\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  color: #3470ff;\r\n`;\r\n\r\nexport const Year = styled.span`\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  color: #121417;\r\n`;\r\n\r\nexport const Price = styled.span`\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  color: #121417;\r\n`;\r\n\r\nexport const City = styled.span`\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 1.5;\r\n  color: rgba(18, 20, 23, 0.5);\r\n`;\r\n\r\nexport const Country = styled.span`\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 1.5;\r\n  color: rgba(18, 20, 23, 0.5);\r\n`;\r\n\r\nexport const RentalCompany = styled.span`\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 1.5;\r\n  color: rgba(18, 20, 23, 0.5);\r\n`;\r\n\r\nexport const Type = styled.span`\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 1.5;\r\n  color: rgba(18, 20, 23, 0.5);\r\n`;\r\n\r\nexport const Brand = styled.span`\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 1.5;\r\n  color: rgba(18, 20, 23, 0.5);\r\n`;\r\n\r\nexport const Mileage = styled.span`\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 1.5;\r\n  color: rgba(18, 20, 23, 0.5);\r\n`;\r\n\r\nexport const Accessories = styled.span`\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 1.5;\r\n  color: rgba(18, 20, 23, 0.5);\r\n`;\r\n\r\nexport const LearnMoreBtn = styled.button`\r\n  background-color: #3470ff;\r\n  border-radius: 12px;\r\n  border: none;\r\n  width: 100%;\r\n  height: 44px;\r\n  font-weight: 600;\r\n  font-size: 14px;\r\n  line-height: 1.42857;\r\n  color: #fff;\r\n  transition: background-color 250ms;\r\n  &:hover,\r\n  :focus {\r\n    background-color: #0b44cd;\r\n  }\r\n`;\r\n\r\nexport const Stroke = styled.span`\r\n  color: rgba(18, 20, 23, 0.1);\r\n`;\r\n","import sprite from '../../image/sprite.svg';\r\nimport {\r\n  Brand,\r\n  CardWrapper,\r\n  City,\r\n  Country,\r\n  Img,\r\n  Item,\r\n  List,\r\n  CarBrand,\r\n  Model,\r\n  Price,\r\n  RentalCompany,\r\n  SubTitle,\r\n  Type,\r\n  Year,\r\n  Mileage,\r\n  Accessories,\r\n  LearnMoreBtn,\r\n  Stroke,\r\n  Svg,\r\n} from './CardList.styled';\r\nimport { useDispatch } from 'react-redux';\r\nimport { iconColor } from '../../redux/cars/carsSlice';\r\n\r\nexport const CardList = ({ cars }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <List>\r\n      {cars.map(car => (\r\n        <Item key={car.id}>\r\n          <div>\r\n            <Img src={car.img} alt=\"car\" width=\"274\" height=\"180\" />\r\n            <Svg onClick={() => dispatch(iconColor(car.id))} $fill={car.fill}>\r\n              <use href={`${sprite}#icon-heart`}></use>\r\n            </Svg>\r\n            <CardWrapper>\r\n              <SubTitle>\r\n                <div>\r\n                  <CarBrand>{car.make}</CarBrand>&nbsp;\r\n                  <Model>{car.model}</Model>,&nbsp;<Year>{car.year}</Year>\r\n                </div>\r\n                <Price>{car.rentalPrice}</Price>\r\n              </SubTitle>\r\n              <div>\r\n                <div>\r\n                  <City>{car.address.split(',')[2]}</City>&nbsp;\r\n                  <Stroke>|</Stroke>\r\n                  &nbsp;\r\n                  <Country>{car.address.split(',')[1]}</Country>&nbsp;\r\n                  <Stroke>|</Stroke>&nbsp;\r\n                  <RentalCompany>{car.rentalCompany}</RentalCompany>\r\n                </div>\r\n                <Type>{car.type}</Type>&nbsp;<Stroke>|</Stroke>&nbsp;\r\n                <Brand>{car.model}</Brand>&nbsp;<Stroke>|</Stroke>&nbsp;\r\n                <Mileage>{car.mileage}</Mileage>&nbsp;<Stroke>|</Stroke>&nbsp;\r\n                <Accessories>{car.accessories[2]}</Accessories>\r\n              </div>\r\n            </CardWrapper>\r\n          </div>\r\n          <LearnMoreBtn>Learn more</LearnMoreBtn>\r\n        </Item>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const MessageInfoCatalog = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 234px;\r\n  @media only screen and (max-width: 427px) {\r\n    font-size: 26px;\r\n  }\r\n  @media only screen and (min-width: 428px) {\r\n    font-size: 36px;\r\n  }\r\n  @media only screen and (min-width: 768px) {\r\n    font-size: 40px;\r\n  }\r\n`;\r\n\r\nexport const MessageInfoFavorite = styled.div`\r\n  text-align: center;\r\n  @media only screen and (max-width: 427px) {\r\n    font-size: 26px;\r\n  }\r\n  @media only screen and (min-width: 428px) {\r\n    font-size: 36px;\r\n  }\r\n  @media only screen and (min-width: 768px) {\r\n    font-size: 40px;\r\n  }\r\n`;\r\n","export const selectCars = state => state.cars;\r\nexport const selectError = state => state.error;\r\nexport const selectLoading = state => state.loading;\r\n","import { useSelector } from 'react-redux';\r\nimport {\r\n  selectCars,\r\n  selectError,\r\n  selectLoading,\r\n  selectIconColor,\r\n} from '../redux/cars/carsSelectors';\r\n\r\nexport const useCars = () => {\r\n  const cars = useSelector(selectCars);\r\n  const error = useSelector(selectError);\r\n  const loading = useSelector(selectLoading);\r\n\r\n  return {\r\n    cars,\r\n    error,\r\n    loading,\r\n  };\r\n};\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const LinkStyledFavorite = styled(Link)`\r\n  &:hover,\r\n  :focus {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n","import { CardList } from \"../CardList/CardList\";\r\nimport { Section, ContainerPage } from \"../Layout\";\r\nimport { MessageInfoFavorite } from \"../Message\";\r\nimport { useCars } from \"../../hooks/useCars\";\r\nimport { LinkStyledFavorite } from \"./Favorite.styled\";\r\nexport const Favorite = () => {\r\n  const { cars } = useCars();\r\n  const carsHearts = cars.filter((el) => el.fill);\r\n  return (\r\n    <Section>\r\n      <ContainerPage>\r\n        {carsHearts.length > 0 && <CardList cars={carsHearts} />}\r\n        {carsHearts.length === 0 && (\r\n          <MessageInfoFavorite>\r\n            Please go to the{\" \"}\r\n            <LinkStyledFavorite to=\"/catalog\">catalog page</LinkStyledFavorite>{\" \"}\r\n            to add the car to your favorites category.\r\n          </MessageInfoFavorite>\r\n        )}\r\n      </ContainerPage>\r\n    </Section>\r\n  );\r\n};\r\n","import { Favorite } from '../components/Favorite/Favorite';\r\nconst FavoritePage = () => {\r\n  return <Favorite />;\r\n};\r\nexport default FavoritePage;\r\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","Item","li","_templateObject2","Img","img","_templateObject3","Svg","svg","_templateObject4","_ref","$fill","CardWrapper","div","_templateObject5","SubTitle","_templateObject6","CarBrand","span","_templateObject7","Model","_templateObject8","Year","_templateObject9","Price","_templateObject10","City","_templateObject11","Country","_templateObject12","RentalCompany","_templateObject13","Type","_templateObject14","Brand","_templateObject15","Mileage","_templateObject16","Accessories","_templateObject17","LearnMoreBtn","button","_templateObject18","Stroke","_templateObject19","CardList","cars","dispatch","useDispatch","_jsx","children","map","car","_jsxs","src","alt","width","height","onClick","iconColor","id","fill","href","concat","sprite","make","model","year","rentalPrice","address","split","rentalCompany","type","mileage","accessories","MessageInfoCatalog","MessageInfoFavorite","selectCars","state","selectError","error","selectLoading","loading","useCars","useSelector","LinkStyledFavorite","Link","Favorite","carsHearts","filter","el","Section","ContainerPage","length","to","FavoritePage"],"sourceRoot":""}